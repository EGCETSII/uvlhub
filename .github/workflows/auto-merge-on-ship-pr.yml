name: Auto Merge Ship PRs

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  auto-merge:
    if: startsWith(github.event.pull_request.title, 'ship')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          sudo apt-get update && sudo apt-get install -y gh jq

      - name: Authenticate GitHub CLI
        env:
          ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        run: |
          echo "${ADMIN_TOKEN}" | gh auth login --with-token

      - name: Auto-merge PR
        env:
          ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        run: |
          # Extract PR details
          PR_NUMBER=${{ github.event.pull_request.number }}
          CURRENT_RUN_ID=$(gh run view --json databaseId -q '.databaseId')
          PR_MERGEABLE=$(gh pr view "$PR_NUMBER" --json mergeable -q '.mergeable')

          # Fetch workflows for this PR and exclude the current workflow
          echo "Checking workflows for PR #$PR_NUMBER..."
          WORKFLOW_STATUSES=$(gh run list --json databaseId,conclusion,status,event,headBranch -q \
            '[.[] | select(.event == "pull_request" and .headBranch == "${{ github.head_ref }}" and .databaseId != '$CURRENT_RUN_ID')]')
          echo "Filtered Workflow statuses: $WORKFLOW_STATUSES"

          # Wait for in-progress workflows to complete
          MAX_RETRIES=5
          RETRY_INTERVAL=60 # Seconds
          ATTEMPT=0
          while echo "$WORKFLOW_STATUSES" | jq -e '.[] | select(.status == "in_progress")' > /dev/null; do
            if [ $ATTEMPT -ge $MAX_RETRIES ]; then
              echo "Some workflows for PR #$PR_NUMBER are still in progress after $MAX_RETRIES retries. Skipping merge."
              exit 1
            fi
            echo "Workflows in progress. Retrying in $RETRY_INTERVAL seconds... (Attempt $((ATTEMPT+1))/$MAX_RETRIES)"
            sleep $RETRY_INTERVAL
            ATTEMPT=$((ATTEMPT+1))
            WORKFLOW_STATUSES=$(gh run list --json databaseId,conclusion,status,event,headBranch -q \
              '[.[] | select(.event == "pull_request" and .headBranch == "${{ github.head_ref }}" and .databaseId != '$CURRENT_RUN_ID')]')
          done

          # Ensure all workflows completed successfully (ignore skipped workflows)
          if echo "$WORKFLOW_STATUSES" | jq -e '.[] | select(.status != "completed" or (.conclusion != "success" and .conclusion != "skipped"))' > /dev/null; then
            echo "Some workflows for PR #$PR_NUMBER are incomplete or failed. Skipping merge."
            exit 1
          fi

          # Merge PR if it's mergeable
          if [ "$PR_MERGEABLE" = "MERGEABLE" ]; then
            echo "PR #$PR_NUMBER is mergeable. Proceeding to merge..."
            gh pr merge "$PR_NUMBER" --merge --auto
            echo "PR #$PR_NUMBER merged successfully."
          else
            echo "PR #$PR_NUMBER is not mergeable. Skipping merge."
          fi
