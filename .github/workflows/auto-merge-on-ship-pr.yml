name: Auto Merge Ship PRs

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  auto-merge:
    if: startsWith(github.event.pull_request.title, 'ship')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI and jq
        run: |
          sudo apt-get update && sudo apt-get install -y gh jq

      - name: Authenticate GitHub CLI
        env:
          ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        run: |
          echo "${ADMIN_TOKEN}" | gh auth login --with-token

      - name: Check PR status and merge
        env:
          ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        run: |
          # Extract the PR number from the GitHub event
          PR_NUMBER=${{ github.event.pull_request.number }}

          # Initialize the FAILURE_COUNT condition
          FAILED_COUNT=0

          # Loop to check the status until there is exactly one failed workflow
          while [ "$FAILED_COUNT" -ne 1 ]; do
            # Get PR details using GitHub CLI's statusCheckRollup query
            pr=$(gh pr view "$PR_NUMBER" --json statusCheckRollup)

            # Count how many workflows have failed (conclusion != "SUCCESS")
            FAILED_COUNT=$(echo "$pr" | jq -r '[.statusCheckRollup[] | select(.conclusion != "SUCCESS")] | length')

            # Check if all checks passed or if exactly one check failed
            if [ "$FAILED_COUNT" -eq 0 ] || [ "$FAILED_COUNT" -eq 1 ]; then
              echo "All checks have passed or exactly one check has failed for PR #$PR_NUMBER. Verifying mergeable status..."

              # Check if the PR is mergeable
              PR_MERGEABLE=$(gh pr view "$PR_NUMBER" --json mergeable -q '.mergeable')

              # Merge the PR if it is mergeable
              if [ "$PR_MERGEABLE" = "MERGEABLE" ]; then
                echo "PR #$PR_NUMBER is mergeable. Proceeding to merge..."
                gh pr merge "$PR_NUMBER" --merge --auto
                echo "PR #$PR_NUMBER merged successfully."
                break  # Exit the loop after merging the PR
              else
                echo "PR #$PR_NUMBER is not mergeable. Skipping merge."
                break  # Exit the loop if the PR is not mergeable
              fi
            else
              echo "Not all checks have passed for PR #$PR_NUMBER. Waiting for checks to pass. Current failed count: $FAILED_COUNT."
              sleep 10  # Wait for 30 seconds before checking again
            fi
          done
