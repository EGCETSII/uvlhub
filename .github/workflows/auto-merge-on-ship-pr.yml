name: Auto Merge Ship PRs

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  auto-merge:
    if: contains(github.event.pull_request.title, 'ship-') || contains(github.event.pull_request.title, 'ship -')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI and jq
        run: |
          sudo apt-get update && sudo apt-get install -y gh jq

      - name: Authenticate GitHub CLI
        env:
          ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        run: |
          echo "${ADMIN_TOKEN}" | gh auth login --with-token

      - name: Wait for all checks to complete (excluding this workflow)
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo "Waiting for all checks to complete for PR #$PR_NUMBER..."

          # Esperar hasta que todos los checks hayan terminado, excluyendo el propio workflow
          while true; do
            # Obtener el estado de los checks del PR, excluyendo el propio workflow (que ejecuta la acción de merge)
            CHECKS=$(gh pr checks "$PR_NUMBER" --json statusCheckRollup -q '[.statusCheckRollup[] | select(.app.name != "GitHub Actions") | .conclusion]')

            # Verificar si todos los checks están completos (success o failure)
            IN_PROGRESS=$(echo "$CHECKS" | grep -c "IN_PROGRESS")
            if [ "$IN_PROGRESS" -eq 0 ]; then
              echo "All checks completed. Proceeding to verify mergeable status."
              break
            else
              echo "Some checks are still in progress. Waiting..."
              sleep 10
            fi
          done

      - name: Check PR status and merge
        env:
          ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}

          # Obtener detalles del PR usando la API de GitHub CLI
          pr=$(gh pr view "$PR_NUMBER" --json statusCheckRollup)

          # Obtener el estado de los checks (sin contar el workflow de auto-merge)
          PR_STATUS_CHECKS=$(echo "$pr" | jq -r 'if ([.statusCheckRollup[] | select(.conclusion != "SUCCESS")] | length) == 0 then "SUCCESS" else "FAILURE" end')

          # Verificar si todos los checks han pasado
          if [ "$PR_STATUS_CHECKS" = "SUCCESS" ]; then
            echo "All checks have passed for PR #$PR_NUMBER. Verifying mergeable status..."

            # Verificar si el PR es mergeable
            PR_MERGEABLE=$(gh pr view "$PR_NUMBER" --json mergeable -q '.mergeable')

            # Fusionar el PR si es mergeable
            if [ "$PR_MERGEABLE" = "MERGEABLE" ]; then
              echo "PR #$PR_NUMBER is mergeable. Proceeding to merge..."
              gh pr merge "$PR_NUMBER" --merge --auto
              echo "PR #$PR_NUMBER merged successfully."
            else
              echo "PR #$PR_NUMBER is not mergeable. Skipping merge."
            fi
          else
            echo "Not all checks have passed for PR #$PR_NUMBER. Skipping merge."
          fi
